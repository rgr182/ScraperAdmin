@{
    ViewData["Title"] = "Solicitud de token de seguridad";
}

<div class="d-flex justify-content-center align-items-center vh-100" style="background-color: #0F6FE4; width: 100%; margin: 0;">
    <div class="card p-4 shadow-lg" style="width: 600px; height: 250px;">
        <div class="card-body text-center d-flex flex-column justify-content-between">
            <h2 class="card-title" style="color: #0F6FE4;">Solicitud de token de seguridad</h2>
            <p class="card-text">Necesitas proporcionar un token de acceso válido para acceder a este recurso. Por favor, introduce tu token en el campo a continuación.</p>

            <div class="d-flex justify-content-center">
                <!-- Input para el token -->
                <input type="text" id="tokenInput" class="form-control text-center me-2" placeholder="Introduce tu token" style="max-width: 300px;" />
                <!-- Div simulando un botón, lo cual elimina cualquier comportamiento submit de forma definitiva -->
                <div id="customButton" class="btn btn-success" style="cursor: pointer;">Acceder</div>
            </div>

            <p class="mt-3 text-muted" style="font-size: 0.9rem;">"Un token es una llave digital que confirma tu identidad y permite acceso seguro a recursos protegidos."</p>
        </div>
    </div>
</div>

<script>
    // Definir la función validateToken
    function validateToken(event) {
        event.preventDefault();  // Prevenir cualquier comportamiento predeterminado
        console.log("Validando el token...");
        var token = document.getElementById('tokenInput').value; // Obtener el token que el usuario introdujo

        if (token) {
            // Enviar el token al backend para validación
            fetch('/api/users/validateToken', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ token: token })
            })
                .then(response => {
                    if (response.ok) {
                        // Guardar el token en sessionStorage en caso de éxito
                        sessionStorage.setItem('accessToken', token);
                        alert("Token válido y guardado en sessionStorage");
                    } else {
                        alert("Token inválido");
                    }
                })
                .catch(error => {
                    console.error('Error al validar el token:', error);
                });
        } else {
            alert("Por favor, introduce un token.");
        }
    }

    // Atar el evento click a nuestro "botón" custom
    document.getElementById('customButton').addEventListener('click', validateToken);
</script>
